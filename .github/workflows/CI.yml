# TODO: caching for faster building
name: CI
env:
  DEBUG: napi:*
  APP_NAME: dc-api-core
  MACOSX_DEPLOYMENT_TARGET: '10.13'
'on':
  push:
    branches:
      - main
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/*.md'
      - LICENSE
      - '**/*.gitignore'
      - .editorconfig
      - docs/**
  pull_request: null

jobs:
  build:
    if: '!contains(github.event.head_commit.message, ''skip ci'')'
    strategy:
      fail-fast: false
      matrix:
        settings:
        - host: macos-latest
          target: x86_64-apple-darwin
          architecture: x64
          build: |
            yarn build
            strip -x *.node
        - host: windows-latest
          build: yarn build
          target: x86_64-pc-windows-msvc
          architecture: x64
        - host: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          architecture: x64
          docker: |
            docker pull $DOCKER_REGISTRY_URL/napi-rs/napi-rs/nodejs-rust:lts-debian
            docker tag $DOCKER_REGISTRY_URL/napi-rs/napi-rs/nodejs-rust:lts-debian builder
          build: |
            docker run --rm -v ~/.cargo/git:/root/.cargo/git -v ~/.cargo/registry:/root/.cargo/registry -v $(pwd):/build -w /build builder yarn build && strip *.node

    runs-on: ${{ matrix.settings.host }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16
        check-latest: true
        architecture: ${{ matrix.settings.architecture }}

    - name: Setup Rust Toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        override: true
        toolchain: stable
        target: ${{ matrix.settings.target }}

    - run: npm install
    - run: npm run build
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: bindings-${{ matrix.settings.target }}
        path: native/bin/${{ env.APP_NAME }}.*.node
        if-no-files-found: error

  publish:
    needs:
    - build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16
        check-latest: true
        architecture: ${{ matrix.settings.architecture }}
    - run: npm install

    - name: Download all artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts
    - run: npm run artifacts
    - name: List packages content
      run: ls npm/*/*

    - name: Publish artifact packages
      run: |
        echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
        CWD=$(pwd)
        COMMIT_NAME=$(git log -1 --pretty=%B)

        function publish {
          cd $1
          if echo $COMMIT_NAME | grep "^Release .*\@next"; then
            npm publish --tag next --access public
          else
            npm publish --access public
          fi
          cd $CWD
        }

        for entry in ./npm/*/; do
          publish $entry
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
